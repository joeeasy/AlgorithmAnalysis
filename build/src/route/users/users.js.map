{"version":3,"sources":["../../../../server/src/route/users/users.js"],"names":["express","require","router","Router","passport","LocalStrategy","Strategy","User","get","req","res","render","post","name","body","email","username","password","password2","checkBody","notEmpty","isEmail","equals","errors","validationErrors","findOne","err","user","mail","newUser","createUser","console","log","flash","redirect","use","done","getUserByUsername","message","comparePassword","isMatch","serializeUser","id","deserializeUser","getUserById","authenticate","successRedirect","failureRedirect","failureFlash","logout","module","exports"],"mappings":"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","file":"users.js","sourcesContent":["var express = require('express');\nvar router = express.Router();\nvar passport = require('passport');\nvar LocalStrategy = require('passport-local').Strategy;\n\nvar User = require('../../models/users');\n\n// Register\nrouter.get('/register', function (req, res) {\n\tres.render('register');\n});\n\n// Login\nrouter.get('/login', function (req, res) {\n\tres.render('login');\n});\n\n// Register User\nrouter.post('/register', function (req, res) {\n\tvar name = req.body.name;\n\tvar email = req.body.email;\n\tvar username = req.body.username;\n\tvar password = req.body.password;\n\tvar password2 = req.body.password2;\n\n\t// Validation\n\treq.checkBody('name', 'Name is required').notEmpty();\n\treq.checkBody('email', 'Email is required').notEmpty();\n\treq.checkBody('email', 'Email is not valid').isEmail();\n\treq.checkBody('username', 'Username is required').notEmpty();\n\treq.checkBody('password', 'Password is required').notEmpty();\n\treq.checkBody('password2', 'Passwords do not match').equals(req.body.password);\n\n\tvar errors = req.validationErrors();\n\n\tif (errors) {\n\t\tres.render('register', {\n\t\t\terrors: errors\n\t\t});\n\t}\n\telse {\n\t\t//checking for email and username are already taken\n\t\tUser.findOne({ username: { \n\t\t\t\"$regex\": \"^\" + username + \"\\\\b\", \"$options\": \"i\"\n\t}}, function (err, user) {\n\t\t\tUser.findOne({ email: { \n\t\t\t\t\"$regex\": \"^\" + email + \"\\\\b\", \"$options\": \"i\"\n\t\t}}, function (err, mail) {\n\t\t\t\tif (user || mail) {\n\t\t\t\t\tres.render('register', {\n\t\t\t\t\t\tuser: user,\n\t\t\t\t\t\tmail: mail\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t\telse {\n\t\t\t\t\tvar newUser = new User({\n\t\t\t\t\t\tname: name,\n\t\t\t\t\t\temail: email,\n\t\t\t\t\t\tusername: username,\n\t\t\t\t\t\tpassword: password\n\t\t\t\t\t});\n\t\t\t\t\tUser.createUser(newUser, function (err, user) {\n\t\t\t\t\t\tif (err) throw err;\n\t\t\t\t\t\tconsole.log(user);\n\t\t\t\t\t});\n         \treq.flash('success_msg', 'You are registered and can now login');\n\t\t\t\t\tres.redirect('/users/login');\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}\n});\n\npassport.use(new LocalStrategy(\n\tfunction (username, password, done) {\n\t\tUser.getUserByUsername(username, function (err, user) {\n\t\t\tif (err) throw err;\n\t\t\tif (!user) {\n\t\t\t\treturn done(null, false, { message: 'Unknown User' });\n\t\t\t}\n\n\t\t\tUser.comparePassword(password, user.password, function (err, isMatch) {\n\t\t\t\tif (err) throw err;\n\t\t\t\tif (isMatch) {\n\t\t\t\t\treturn done(null, user);\n\t\t\t\t} else {\n\t\t\t\t\treturn done(null, false, { message: 'Invalid password' });\n\t\t\t\t}\n\t\t\t});\n\t\t});\n\t}));\n\npassport.serializeUser(function (user, done) {\n\tdone(null, user.id);\n});\n\npassport.deserializeUser(function (id, done) {\n\tUser.getUserById(id, function (err, user) {\n\t\tdone(err, user);\n\t});\n});\n\nrouter.post('/login',\n\tpassport.authenticate('local', { successRedirect: '/', failureRedirect: '/users/login', failureFlash: true }),\n\tfunction (req, res) {\n\t\tres.redirect('/');\n\t});\n\nrouter.get('/logout', function (req, res) {\n\treq.logout();\n\n\treq.flash('success_msg', 'You are logged out');\n\n\tres.redirect('/users/login');\n});\n\nmodule.exports = router;"]}