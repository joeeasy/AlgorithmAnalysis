{"version":3,"sources":["../../server/src/index.js"],"names":["app","Port","process","env","PORT","use","express","static","path","resolve","__dirname","webpackConfig","get","req","res","sendfile","post","url","decodeURIComponent","query","search","console","log","error","response","body","title","isbn","description","coverages","coverage","data","$","cheerio","load","allBody","content","Array","from","forEach","journal","index","children","next","find","each","i","cite","name","push","link","firstChild","attribs","text","send","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,MAAM,wBAAZ;;AAEA,IAAMC,OAAQC,QAAQC,GAAR,CAAYC,IAAZ,IAAoB,IAAlC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAJ,IAAIK,GAAJ,CAAQC,kBAAQC,MAAR,CAAeC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,qBAAxB,CAAf,CAAR;AACA;AACAV,IAAIK,GAAJ,CAAQ,oCAAkB,uBAAQM,iBAAR,CAAlB,CAAR;AACA;;;AAGA;;AAEAX,IAAIY,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,QAAJ,CAAaP,eAAKC,OAAL,CAAaC,SAAb,EAAwB,gCAAxB,CAAb;AACD,CAFD;;AAIA;;;;AAIAV,IAAIgB,IAAJ,CAAS,SAAT,EAAoB,UAACH,GAAD,EAAMC,GAAN,EAAc;AAChC;AACA,MAAIG,MAAMC,mBAAmBL,IAAIM,KAAJ,CAAUC,MAA7B,CAAV;AACAC,UAAQC,GAAR,CAAYL,GAAZ;;AAEC,yBAAQA,GAAR,EAAa,UAAUM,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AAC5C,QAAIC,cAAJ;AAAA,QAAWC,aAAX;AAAA,QAAiBC,oBAAjB;AAAA,QAA8BC,kBAA9B;AAAA,QAAyCC,iBAAzC;AACAD,gBAAY,EAAZ;AACAC,eAAW,EAAX;AACA,QAAIC,OAAO,EAAX;;AAEA,QAAI,CAACR,KAAL,EAAY;AACV,UAAIS,IAAIC,kBAAQC,IAAR,CAAaT,IAAb,CAAR;AACA,UAAIU,gBAAJ;;AAEA;AACA,UAAIC,UAAUC,MAAMC,IAAN,CAAWN,EAAE,2BAAF,CAAX,CAAd;AACD;AACA;AACC;;AAEAX,cAAQC,GAAR,CAAY,cAAcL,GAA1B;AACAmB,cAAQG,OAAR,CAAgB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAClCf,gBAAQc,QAAQE,QAAR,CAAiB,CAAjB,EAAoBA,QAApB,CAA6B,CAA7B,EAAgCX,IAAxC;AACAJ,eAAOa,QAAQE,QAAR,CAAiB,CAAjB,EAAoBX,IAA3B;AACAH,sBAAcY,QAAQE,QAAR,CAAiB,CAAjB,EAAoBC,IAApB,CAAyBA,IAAzB,CAA8BZ,IAA5C;AACD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACCC,UAAEQ,OAAF,EAAWI,IAAX,CAAgB,UAAhB,EAA4BC,IAA5B,CAAiC,UAACC,CAAD,EAAIC,IAAJ,EAAa;AAC5CjB,qBAAW,EAAX;AACAT,kBAAQC,GAAR,CAAY,UAAZ,EAAwByB,KAAKL,QAAL,CAAcH,OAAd,CAAsB,gBAAQ;AACrD,gBAAIS,KAAKA,IAAL,KAAc,IAAlB,EAAwB;AACtBlB,uBAASmB,IAAT,CAAc,EAACC,MAAMF,KAAKG,UAAL,CAAgBC,OAAvB,EAAgCC,MAAML,KAAKG,UAAL,CAAgBT,QAAhB,CAAyB,CAAzB,EAA4BX,IAAlE,EAAd;AAGD;AACD,WANuB,CAAxB;;AASD;AAEA,SAbD;AAcD;AACEA,aAAKkB,IAAL,CAAU,EAAEvB,YAAF,EAASC,UAAT,EAAeC,wBAAf,EAA4BE,kBAA5B,EAAV;AAEF,OAtCD;;AAwCAhB,UAAIwC,IAAJ,CAASvB,IAAT;AACD,KApDD,MAqDK;AACHV,cAAQC,GAAR,CAAY,iCAAiCC,KAA7C;AACD;AACF,GA9DD;AA+DD,CApEF;;AAsEAvB,IAAIuD,MAAJ,CAAWtD,IAAX,EAAiB,UAACY,GAAD,EAAMC,GAAN;AAAA,SAAcO,QAAQC,GAAR,CAAY,qCAAmCrB,IAA/C,CAAd;AAAA,CAAjB","file":"index.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport Crawler  from \"crawler\";\nimport request  from \"request\";\nimport cheerio  from \"cheerio\";\nimport bodyParser from 'body-parser';\nimport webpack from 'webpack';\nimport webpackMiddleware from 'webpack-dev-middleware';\nimport webpackConfig from '../../webpack.config';\n\n// starting app\nconst app = express();\n\nconst Port =  process.env.PORT || 5000;\n// console.log(process.env)\n\n// parse application/x-www-form-urlencoded\n// app.use(bodyParser.urlencoded({ extended: false }))\n \n// // parse application/json\n// app.use(bodyParser.json())\n \n// app.use(function (req, res) {\n//   res.setHeader('Content-Type', 'text/plain')\n//   res.write('you posted:\\n')\n//   res.end(JSON.stringify(req.body, null, 2))\n// })\n// load static files=============\napp.use(express.static(path.resolve(__dirname, '../../client/public')));\n// =============================\napp.use(webpackMiddleware(webpack(webpackConfig)));\n// =======================================\n\n\n// app.use(express.static(path.resolve(__dirname, '../../client/public')));\n\napp.get('/*', (req, res) => {\n  res.sendfile(path.resolve(__dirname, '../../client/public/index.html'));\n});\n\n/**\n * start scrapper\n */\n\napp.post('/search', (req, res) => {\n  // console.log(req.query)\n  var url = decodeURIComponent(req.query.search);\n  console.log(url)\n \n   request(url, function (error, response, body) {\n     let title, isbn, description, coverages, coverage;\n     coverages = [];\n     coverage = [];\n     let data = [];\n    \n     if (!error) {\n       var $ = cheerio.load(body)\n       let allBody;\n \n       // var title = $('title').text();\n       var content = Array.from($('#results > form > ul > li'));\n      //  coverages = Array.from($('#results > form > ul > li > div > ul > li > a'));\n      //  allBody = $('#results > form > ul').html();\n       // var freeArticles = $('.central-featured-lang.lang1 a small').text()\n \n       console.log('Loading: ' + url);\n       content.forEach((journal, index) => {\n         title = journal.children[0].children[0].data;\n         isbn = journal.children[1].data;\n         description = journal.children[1].next.next.data;\n        //  console.log(element.children)\n        // console.log($(journal.children.find()))\n        //  journal.children.filter((element) => {\n        //    /* Array.from(element.next.children).forEach((element) => {\n        //     //  console.log(element)\n        //    }) */\n\n        // ;\n        //    allBody = element.children;\n        //    allBody = Array.from($(allBody).find(\"li > a\")).filter((cite) => {\n          \n        //     return (cite !== ([] || undefined)) ? coverage.push( {link: cite.attribs, text: cite.children[0].data} ) :  \"Nothing to show\";\n        //     // console.log(\"Coverages :\",  coverage)\n  \n        //    });\n        //   console.log(allBody)\n        //  })\n         $(journal).find(\"div > ul\").each((i, cite) => {\n           coverage = [];\n           console.log('Coverage', cite.children.forEach(name => {\n            if (name.name === 'li') {\n              coverage.push({link: name.firstChild.attribs, text: name.firstChild.children[0].data});\n              \n              \n            }\n           }) ) \n           \n          \n          // (cite !== undefined) && coverage.push( {link: cite.attribs, text: cite.children[0].data} );\n\n         })\n        //  coverage.push(coverages);\n          data.push({ title, isbn, description, coverage});\n\n       })\n\n       res.send(data);\n     }\n     else {\n       console.log(\"Weâ€™ve encountered an error: \" + error);\n     }\n   });\n })\n\napp.listen(Port, (req, res) => console.log('server started http://localhost:'+Port))"]}