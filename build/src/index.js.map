{"version":3,"sources":["../../server/src/index.js"],"names":["app","Port","process","env","PORT","use","express","static","path","resolve","__dirname","webpackConfig","get","req","res","sendfile","post","url","decodeURIComponent","query","search","console","log","error","response","body","title","isbn","description","coverages","coverage","data","$","cheerio","load","allBody","content","Array","from","html","forEach","element","index","children","next","find","filter","undefined","push","link","attribs","text","send","listen"],"mappings":";;AAAA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;AACA;;;;;;AAEA;AACA,IAAMA,MAAM,wBAAZ;;AAEA,IAAMC,OAAO,QAAQC,QAAQC,GAAR,CAAYC,IAAjC;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACAJ,IAAIK,GAAJ,CAAQC,kBAAQC,MAAR,CAAeC,eAAKC,OAAL,CAAaC,SAAb,EAAwB,qBAAxB,CAAf,CAAR;AACA;AACAV,IAAIK,GAAJ,CAAQ,oCAAkB,uBAAQM,iBAAR,CAAlB,CAAR;AACA;;;AAGA;;AAEAX,IAAIY,GAAJ,CAAQ,IAAR,EAAc,UAACC,GAAD,EAAMC,GAAN,EAAc;AAC1BA,MAAIC,QAAJ,CAAaP,eAAKC,OAAL,CAAaC,SAAb,EAAwB,gCAAxB,CAAb;AACD,CAFD;;AAIA;;;;AAIAV,IAAIgB,IAAJ,CAAS,SAAT,EAAoB,UAACH,GAAD,EAAMC,GAAN,EAAc;AAChC;AACA,MAAIG,MAAMC,mBAAmBL,IAAIM,KAAJ,CAAUC,MAA7B,CAAV;AACAC,UAAQC,GAAR,CAAYL,GAAZ;;AAEC,yBAAQA,GAAR,EAAa,UAAUM,KAAV,EAAiBC,QAAjB,EAA2BC,IAA3B,EAAiC;AAC5C,QAAIC,cAAJ;AAAA,QAAWC,aAAX;AAAA,QAAiBC,oBAAjB;AAAA,QAA8BC,kBAA9B;AAAA,QAAyCC,iBAAzC;AACAA,eAAW,EAAX;AACA,QAAIC,OAAO,EAAX;;AAEA,QAAI,CAACR,KAAL,EAAY;AACV,UAAIS,IAAIC,kBAAQC,IAAR,CAAaT,IAAb,CAAR;AACA,UAAIU,gBAAJ;;AAEA;AACA,UAAIC,UAAUC,MAAMC,IAAN,CAAWN,EAAE,2BAAF,CAAX,CAAd;AACD;AACCG,gBAAUH,EAAE,sBAAF,EAA0BO,IAA1B,EAAV;AACA;;AAEAlB,cAAQC,GAAR,CAAY,cAAcL,GAA1B;AACAmB,cAAQI,OAAR,CAAgB,UAACC,OAAD,EAAUC,KAAV,EAAoB;AAClChB,gBAAQe,QAAQE,QAAR,CAAiB,CAAjB,EAAoBA,QAApB,CAA6B,CAA7B,EAAgCZ,IAAxC;AACAJ,eAAOc,QAAQE,QAAR,CAAiB,CAAjB,EAAoBZ,IAA3B;AACAH,sBAAca,QAAQE,QAAR,CAAiB,CAAjB,EAAoBC,IAApB,CAAyBA,IAAzB,CAA8Bb,IAA5C;AACAF,oBAAWQ,MAAMC,IAAN,CAAWN,EAAES,OAAF,EAAWI,IAAX,CAAgB,mBAAhB,CAAX,EAAiDC,MAAjD,CAAwD,UAACL,OAAD,EAAa;AAC/E,WAACM,SAAD,IAAcjB,SAASkB,IAAT,CAAe,EAACC,MAAMR,QAAQS,OAAf,EAAwBC,MAAMV,QAAQE,QAAR,CAAiB,CAAjB,EAAoBZ,IAAlD,EAAf,CAAd;AAEA,SAHU,CAAX;AAICA,aAAKiB,IAAL,CAAU,EAAEtB,YAAF,EAASC,UAAT,EAAeC,wBAAf,EAA4BE,kBAA5B,EAAV;AACF,OATD;;AAWAhB,UAAIsC,IAAJ,CAASrB,IAAT;AACD,KAvBD,MAwBK;AACHV,cAAQC,GAAR,CAAY,iCAAiCC,KAA7C;AACD;AACF,GAhCD;AAiCD,CAtCF;;AAwCAvB,IAAIqD,MAAJ,CAAWpD,IAAX,EAAiB,UAACY,GAAD,EAAMC,GAAN;AAAA,SAAcO,QAAQC,GAAR,CAAY,qCAAmCrB,IAA/C,CAAd;AAAA,CAAjB","file":"index.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport Crawler  from \"crawler\";\nimport request  from \"request\";\nimport cheerio  from \"cheerio\";\nimport bodyParser from 'body-parser';\nimport webpack from 'webpack';\nimport webpackMiddleware from 'webpack-dev-middleware';\nimport webpackConfig from '../../webpack.config';\n\n// starting app\nconst app = express();\n\nconst Port = 5000 || process.env.PORT;\n// console.log(process.env)\n\n// parse application/x-www-form-urlencoded\n// app.use(bodyParser.urlencoded({ extended: false }))\n \n// // parse application/json\n// app.use(bodyParser.json())\n \n// app.use(function (req, res) {\n//   res.setHeader('Content-Type', 'text/plain')\n//   res.write('you posted:\\n')\n//   res.end(JSON.stringify(req.body, null, 2))\n// })\n// load static files=============\napp.use(express.static(path.resolve(__dirname, '../../client/public')));\n// =============================\napp.use(webpackMiddleware(webpack(webpackConfig)));\n// =======================================\n\n\n// app.use(express.static(path.resolve(__dirname, '../../client/public')));\n\napp.get('/*', (req, res) => {\n  res.sendfile(path.resolve(__dirname, '../../client/public/index.html'));\n});\n\n/**\n * start scrapper\n */\n\napp.post('/search', (req, res) => {\n  // console.log(req.query)\n  var url = decodeURIComponent(req.query.search);\n  console.log(url)\n \n   request(url, function (error, response, body) {\n     let title, isbn, description, coverages, coverage;\n     coverage = [];\n     let data = [];\n    \n     if (!error) {\n       var $ = cheerio.load(body)\n       let allBody;\n \n       // var title = $('title').text();\n       var content = Array.from($('#results > form > ul > li'));\n      //  coverages = Array.from($('#results > form > ul > li > div > ul > li > a'));\n       allBody = $('#results > form > ul').html();\n       // var freeArticles = $('.central-featured-lang.lang1 a small').text()\n \n       console.log('Loading: ' + url);\n       content.forEach((element, index) => {\n         title = element.children[0].children[0].data;\n         isbn = element.children[1].data;\n         description = element.children[1].next.next.data;\n         coverages= Array.from($(element).find(\"div > ul > li > a\")).filter((element) => {\n          !undefined && coverage.push( {link: element.attribs, text: element.children[0].data} );\n\n         })\n          data.push({ title, isbn, description, coverage})\n       })\n\n       res.send(data);\n     }\n     else {\n       console.log(\"Weâ€™ve encountered an error: \" + error);\n     }\n   });\n })\n\napp.listen(Port, (req, res) => console.log('server started http://localhost:'+Port))"]}