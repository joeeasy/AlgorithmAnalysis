{"version":3,"sources":["../../server/src/index.js"],"names":["LocalStrategy","Strategy","cloudinary","config","cloud_name","api_key","api_secret","mongoDB","connection","mongoose","connect","db","on","console","error","bind","once","log","app","Port","process","env","PORT","use","bodyParser","urlencoded","extended","json","express","static","path","resolve","__dirname","webpackConfig","set","join","secret","saveUninitialized","resave","passport","initialize","session","errorFormatter","param","msg","value","namespace","split","root","shift","formParam","length","req","res","next","locals","messages","success_msg","flash","error_msg","get","sendfile","post","url","decodeURIComponent","query","search","response","body","title","isbn","description","coverages","coverage","data","$","cheerio","load","content","Array","from","forEach","journal","index","children","find","each","i","cite","name","push","link","firstChild","attribs","text","send","helpers","ensureAuthentication","render","id","params","date","format","User","findOne","_id","err","user","Article","articleID","articles","files","status","image","thumbnail","uploader","upload","result","article","articleTitle","author","authorname","branch","volume","issues","pages","publishedDate","articleContent","tcontent","abstract","paper","roi","save","handleError","redirect","keyword","arts","filter","art","includes","articleId","articleModified","updateOne","deleteOne","price","email","userId","checkBody","notEmpty","isEmail","equals","password","errors","validationErrors","done","userPass","message","validatePassword","serializeUser","deserializeUser","findById","authenticate","successRedirect","failureRedirect","failureFlash","logout","listen"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport Crawler from \"crawler\";\nimport request from \"request\";\nimport cheerio from \"cheerio\";\nimport bodyParser from 'body-parser';\nimport webpack from 'webpack';\nimport webpackMiddleware from 'webpack-dev-middleware';\nimport webpackConfig from '../../webpack.config';\n// import { scrapeRoute } from './route/index';\nimport session  from 'express-session';\nimport expressValidator from 'express-validator';\nimport flash from 'connect-flash';\nimport pug from 'pug';\nimport expressMessage from 'express-messages';\nimport mongoose from 'mongoose';\nimport Article from './models/articles';\nimport User from './models/users';\nimport cloudinary from 'cloudinary';\nimport upload from 'express-fileupload';\nimport passport from 'passport';\nimport moment from 'moment';\nimport { Strategy }  from 'passport-local';\nimport helpers from './helpers/helpers';\n\nconst LocalStrategy = Strategy;\n// cloudinary configuration\ncloudinary.config({ \n  cloud_name: 'dsxfchez8', \n  api_key: '557836499496183', \n  api_secret: 'PKUHg16h73APhZPubaRw25mfbdE' \n});\n\n\nconst mongoDB = 'mongodb://root:test123@ds255260.mlab.com:55260/algorithmanalysis';\n// database connection\nconst connection = mongoose.connect(mongoDB);\n \nlet db = mongoose.connection;\ndb.on('error', console.error.bind(console, 'connection error:'));\ndb.once('open', function() {\n  // we're connected!\n  console.log('connected')\n});\n\n// starting app\nconst app = express();\n\n\nconst Port = process.env.PORT || 5000;\n// console.log(process.env)\n\n\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({\n  extended: false\n}))\n\n// file upload\napp.use(upload());\n\n// // parse application/json\napp.use(bodyParser.json())\n\n// load static files=============\napp.use(express.static(path.resolve(__dirname, '../../client/public')));\n \n// =============================\napp.use(webpackMiddleware(webpack(webpackConfig)));\n// =======================================\n\napp.set('view engine', 'pug');\napp.set(\"views\", path.join(__dirname, \"views\"));\n\n/// Express Session\napp.use(session({\n  secret: 'secret',\n  saveUninitialized: true,\n  resave: true\n}));\n\n// Passport init\napp.use(passport.initialize());\napp.use(passport.session());\n\n// Express Validator\napp.use(expressValidator({\n  errorFormatter: function(param, msg, value) {\n      var namespace = param.split('.')\n      , root    = namespace.shift()\n      , formParam = root;\n\n    while(namespace.length) {\n      formParam += '[' + namespace.shift() + ']';\n    }\n    return {\n      param : formParam,\n      msg   : msg,\n      value : value\n    };\n  }\n}));\n\n// Express message\napp.use(flash());\n\n// Global Vars\napp.use(function (req, res, next) {\n  res.locals.messages= expressMessage(req, res);\n  res.locals.success_msg = req.flash('success_msg');\n  res.locals.error_msg = req.flash('error_msg');\n  res.locals.error = req.flash('error');\n  // res.locals.user = req.user || null;\n  next();\n});\n\n\n\n// \napp.get('/', (req, res) => {\n  res.sendfile(path.resolve(__dirname, '../../client/public/index.html'));\n});\n\napp.get('/contact', (req, res) => {\n  res.sendfile(path.resolve(__dirname, '../../client/public/index.html'));\n});\n\n/**\n * start scrapper\n */\n\n\napp.post('/search', (req, res) => {\n  // console.log(req.query)\n  let url = decodeURIComponent(req.query.search);\n  // console.log(url)\n\n  request(url, function (error, response, body) {\n    let title, isbn, description, coverages, coverage;\n    coverages = [];\n    coverage = [];\n    let data = [];\n\n    if (!error) {\n      let $ = cheerio.load(body)\n\n      let content = Array.from($('#results > form > ul > li'));\n      content.forEach((journal, index) => {\n        title = journal.children[0].children[0].data;\n        isbn = journal.children[1].data;\n        description = journal.children[1].next.next.data;\n        // \n        $(journal).find(\"div > ul\").each((i, cite) => {\n          coverage = [];\n          cite.children.forEach(name => {\n            if (name.name === 'li') {\n              // console.log(name.firstChild.attribs)\n              coverage.push({\n                link: (name.firstChild.attribs),\n                text: name.firstChild.children[0].data\n              });\n\n\n            }\n          });\n\n        })\n        //  coverage.push(coverages);\n        data.push({\n          title,\n          isbn,\n          description,\n          coverage\n        });\n\n      })\n\n      res.send(data);\n    } else {\n      console.log(\"We’ve encountered an error: \" + error);\n    }\n  });\n});\n\n// GET ROUTES\napp.get('/scienceweb', helpers.ensureAuthentication, (req, res) => res.render('index'));\n\napp.get('/login', (req, res) => res.render('login') );\napp.get('/scienceweb/pricing', (req, res) => res.render('pricing'));\napp.get('/scienceweb/institution-signup', (req, res) => {\n  res.render('register');\n});\n\napp.get('/scienceweb/payment_summary/:id', (req, res) => {\n  let id = req.params.id;\n  let date = moment().format(\"MMMM Do YYYY\");\n\n  User.findOne({_id: id},(err, user) => {\n    console.log(user)\n    res.render('payment_summary', {user, date });\n  });\n});\n\napp.get('/scienceweb/searchResult', helpers.ensureAuthentication, (req, res) => res.render('search_result'));\n\napp.get('/scienceweb/search/:articleID', (req, res) => {\n  Article.find({_id: req.params.articleID},(err, articles) => {\n    res.render('search_details', {articles});\n  })\n});\napp.get('/scienceweb/addArticle', helpers.ensureAuthentication, (req, res) => res.render('addarticle'));\napp.get('/scienceweb/articles', helpers.ensureAuthentication, (req, res) =>{\n  Article.find((err, articles) => {\n    // console.log(articles);\n    res.render('articles', {articles});\n  });\n  \n});\n\n// POST ROUTES creating articles\napp.post('/scienceweb/addArticle', helpers.ensureAuthentication, (req, res) => {\n  if (!req.files)\n    return res.status(400).send('No files were uploaded.');\n \n  // The name of the input field (i.e. \"sampleFile\") is used to retrieve the uploaded file\n  let image = req.files.thumbnail;\n    console.log(image)\n    // let file = req.files.filename,\n    //     filename = filename;\n    //     file.mv('../upload/'+filename);\n  // console.log(__dirname, req.body.thumbnail);\n  cloudinary.uploader.upload(__dirname+'/'+req.body.thumbnail, function(result) { \n    console.log(result) \n  });\n\n  let article = new Article({\n    title: req.body.articleTitle,\n    author:  req.body.authorname,\n    branch:  req.body.branch,\n    volume:  req.body.volume,\n    issues:  req.body.issues,\n    pages:  req.body.pages,\n    publishedDate:  req.body.publishedDate,\n    articleContent:  req.body.tcontent,\n    abstract:  req.body.abstract,\n    thumbnail: req.body.thumbnail,\n    paper: req.body.paper,\n    roi: req.body.roi\n  });\n\n  // save the newly created article\n  article.save((err) => {\n    if (err) return handleError(err);\n    // saved!\n    console.log('article was created');\n  });\n  res.redirect('/scienceweb/articles')\n  \n});\n\n\n// post search result \napp.post('/scienceweb/searchResult', helpers.ensureAuthentication, (req, res) => {\n  // console.log(req.body.search)\n  let keyword = req.body.search;\n  let articles = [];\n  Article.find( (err, arts) => {\n    arts.filter(art => {\n      // console.log(art.title)\n     if( art.title.includes(keyword)) {\n        articles.push(art);\n      }\n    })\n    // console.log(articles);\n    res.render('search_result', {articles, keyword});\n  });\n});\n\n// EDIT ARTICLE\napp.get('/scienceweb/article/edit', helpers.ensureAuthentication, (req, res) => {\n  let id = req.query.articleId;\n  Article.find({_id: id}, (err, articles) => {\n    res.render('editArticle', {articles})\n  })\n});\n\n// UPDATE EDITTED ARTICLES\napp.post('/scienceweb/article/update', helpers.ensureAuthentication, (req, res) => {\n  // console.log(req.params.id);\n\n  let id = req.body.id;\n  let articleModified = {\n    title: req.body.articleTitle,\n    author:  req.body.authorname,\n    branch:  req.body.branch,\n    volume:  req.body.volume,\n    issues:  req.body.issues,\n    pages:  req.body.pages,\n    publishedDate:  req.body.publishedDate,\n    articleContent:  req.body.tcontent,\n    abstract:  req.body.abstract,\n    thumbnail: req.body.thumbnail,\n    paper: req.body.paper,\n    roi: req.body.roi\n  }\n  Article.updateOne({ _id: id }, articleModified, function(err, res) {\n    console.log(res);\n\n  });\n  res.redirect('/scienceweb/articles');\n});\n\n//DELETE ARTICLE\napp.post('/scienceweb/article/delete', (req, res) => {\n  let id = req.body.id;\n  Article.deleteOne({ _id: id }, (err) => {\n    if (err) return handleError(err);\n    \n    // deleted at most one tank document\n    res.redirect('/scienceweb/articles');\n    console.log('success');\n\n  });\n});\n\n// SIGN UP POST\napp.post('/institution-signup/', (req, res) => {\n  let price = req.params.price;\n  let email = req.body.email;\n  let userId = '';\n\n  // Validation\n  req.checkBody('fname', 'First name is required').notEmpty();\n  req.checkBody('lname', 'Last name is required').notEmpty();\n  req.checkBody('iname', 'Institution name is required').notEmpty();\n  req.checkBody('phone', 'Phone number is required').notEmpty();\n  req.checkBody('email', 'Email is not valid').isEmail();\n  req.checkBody('password', 'Password is required').notEmpty();\n  req.checkBody('cpassword', 'Passwords do not match').equals(req.body.password);\n  req.checkBody('userType', 'Usertype is required').notEmpty();\n  req.checkBody('cardHolderName', 'Please provide name on card').notEmpty();\n  req.checkBody('expiringDate', 'Please provide expiring date on card').notEmpty();\n  req.checkBody('ccv', 'Please provide ccv on card').notEmpty();\n  req.checkBody('baddress', 'Please provide billing address').notEmpty();\n  req.checkBody('postalCode', 'Please provide postal code').notEmpty();\n  req.checkBody('country', 'Please enter a country').notEmpty();\n\n  let errors =  req.validationErrors();\n\n  if(errors) {\n    console.log(errors)\n    res.render('register', {errors, price});\n  }\n  else {\n    //checking for email and username are already taken\n\n      User.findOne({ email: { \n        \"$regex\": \"^\" + email + \"\\\\b\", \"$options\": \"i\"\n    }}, function (err, email) {\n        if (email) {\n          res.render('register', {\n            email, price\n          });\n        }\n        else {\n          \n          let user = new User(req.body);\n          // save the newly created user\n          console.log(user)\n          userId = user._id;\n          user.save((err) => {\n            if (err) return handleError(err);\n            // saved!\n            console.log('New  user added');\n            \n          });\n          res.redirect('/scienceweb/payment_summary/'+userId);\n        }\n      });\n  }\n});\n\n// LOGIN\npassport.use(new LocalStrategy(\n  function(email, password, done) {\n    let userPass = '';\n    User.findOne({ email: email }, function(err, user) {\n      userPass = user.password;\n      if (err) { return done(err); }\n      if (!user) {\n        return done(null, false, { message: 'Incorrect username or password.' });\n      }\n      if (!helpers.validatePassword(password, userPass)) {\n        console.log('invalid password')\n        return done(null, false, { message: 'Incorrect password or username.' });\n      }\n      console.log(user);\n      app.locals.user = user;\n      console.log(app.locals.user = user)\n      console.log('login sucessful')\n      return done(null, user);\n    });\n  }\n));\n\npassport.serializeUser(function(user, done) {\n  done(null, user.id);\n});\n\npassport.deserializeUser(function(id, done) {\n  User.findById(id, function(err, user) {\n    done(err, user);\n  });\n});\n\napp.post('/login',\n  passport.authenticate('local', { successRedirect: '/scienceweb',\n                                   failureRedirect: '/login',\n                                   failureFlash: true })\n);\n\napp.get('/logout', function(req, res){\n  req.logout();\n  res.redirect('/login');\n});\n\napp.listen(Port, (req, res) => console.log('server started http://localhost:' + Port));"]}