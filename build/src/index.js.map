{"version":3,"sources":["../../server/src/index.js"],"names":["app","Port","process","env","PORT","use","bodyParser","urlencoded","extended","json","express","static","path","resolve","__dirname","webpackConfig","get","req","res","sendfile","post","console","log","body","send","url","decodeURIComponent","query","search","error","response","title","isbn","description","coverages","coverage","data","$","cheerio","load","content","Array","from","forEach","journal","index","children","next","find","each","i","cite","name","firstChild","attribs","push","link","text","listen"],"mappings":"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","file":"index.js","sourcesContent":["import express from 'express';\nimport path from 'path';\nimport Crawler  from \"crawler\";\nimport request  from \"request\";\nimport cheerio  from \"cheerio\";\nimport bodyParser from 'body-parser';\nimport webpack from 'webpack';\nimport webpackMiddleware from 'webpack-dev-middleware';\nimport webpackConfig from '../../webpack.config';\n\n// starting app\nconst app = express();\n\nconst Port =  process.env.PORT || 5000;\n// console.log(process.env)\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: false }))\n \n// // parse application/json\napp.use(bodyParser.json())\n \n// load static files=============\napp.use(express.static(path.resolve(__dirname, '../../client/public')));\n// =============================\napp.use(webpackMiddleware(webpack(webpackConfig)));\n// =======================================\n\n\n// app.use(express.static(path.resolve(__dirname, '../../client/public')));\n\napp.get('/*', (req, res) => {\n  res.sendfile(path.resolve(__dirname, '../../client/public/index.html'));\n});\n\n/**\n * start scrapper\n */\napp.post('/contact', (req, res) => {\n  console.log(req.body)\n  res.send(req.body);\n})\n\n\napp.post('/search', (req, res) => {\n  // console.log(req.query)\n  var url = decodeURIComponent(req.query.search);\n  console.log(url)\n \n   request(url, function (error, response, body) {\n     let title, isbn, description, coverages, coverage;\n     coverages = [];\n     coverage = [];\n     let data = [];\n    \n     if (!error) {\n       var $ = cheerio.load(body)\n\n       var content = Array.from($('#results > form > ul > li'));\n       content.forEach((journal, index) => {\n         title = journal.children[0].children[0].data;\n         isbn = journal.children[1].data;\n         description = journal.children[1].next.next.data;\n        // \n         $(journal).find(\"div > ul\").each((i, cite) => {\n           coverage = [];\n           cite.children.forEach(name => {\n            if (name.name === 'li') {\n              console.log(name.firstChild.attribs)\n              coverage.push({link: (name.firstChild.attribs), text: name.firstChild.children[0].data});\n              \n              \n            }\n           });\n           \n          \n          // (cite !== undefined) && coverage.push( {link: cite.attribs, text: cite.children[0].data} );\n\n         })\n        //  coverage.push(coverages);\n          data.push({ title, isbn, description, coverage});\n\n       })\n\n       res.send(data);\n     }\n     else {\n       console.log(\"Weâ€™ve encountered an error: \" + error);\n     }\n   });\n })\n\napp.listen(Port, (req, res) => console.log('server started http://localhost:'+Port))"]}